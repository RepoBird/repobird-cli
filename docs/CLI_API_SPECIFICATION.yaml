openapi: 3.0.0
info:
  title: RepoBird CLI API
  version: 1.0.0
  description: |
    API endpoints for RepoBird CLI integration.

    ## Authentication
    All endpoints require authentication using an API key passed as a Bearer token.

    ## Rate Limiting
    API requests are rate-limited to 100 requests per minute per API key.

    ## Repository Filtering
    All API endpoints that return repository data automatically filter out:
    - Disabled repositories (isEnabled=false)
    - Repositories without GitHub App installation (installationId is null or empty)
    - Deleted repositories (deletedAt is not null)
    
    This ensures that only active, properly configured repositories are accessible via the API.

    ## File Hash Tracking
    The API supports file hash tracking for audit and debugging purposes.
    When submitting a run with a fileHash, the system logs if an identical hash was previously used
    but allows the new run to proceed. Duplicate file hashes are permitted and will not block execution.
    The `force` parameter is deprecated for file hash handling and has no effect on duplicate detection.
  contact:
    name: RepoBird Support
    email: support@repobird.ai
    url: https://repobird.ai

servers:
  - url: https://repobird.ai
    description: Production API
  - url: http://localhost:3000
    description: Development server

security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      description: API key authentication

  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: Error code (e.g., REPO_NOT_FOUND, QUOTA_EXCEEDED, REPOSITORY_DISABLED, ALL_RUNS_FAILED, RUN_CREATION_FAILED, BRANCH_NOT_FOUND)
          example: REPO_NOT_FOUND
        message:
          type: string
          description: Human-readable error message
          example: 'Duplicate run detected: A run with this file hash already exists (ID: 123). Use --force to override.'
      required:
        - error

    User:
      type: object
      properties:
        id:
          type: string
          example: user_2abc123def456
        email:
          type: string
          example: developer@example.com
        name:
          type: string
          nullable: true
          description: User's full name (empty string if not provided)
          example: John Doe
        githubUsername:
          type: string
          example: johndoe
        tier:
          type: string
          enum: [free, pro, enterprise]
          example: pro
        remainingProRuns:
          type: integer
          example: 45
        remainingPlanRuns:
          type: integer
          example: 10
        proTotalRuns:
          type: integer
          example: 100
          description: Total pro runs available per period for this tier
        planTotalRuns:
          type: integer
          example: 20
          description: Total plan runs available per period for this tier

    Tier:
      type: object
      properties:
        name:
          type: string
          enum: [free, pro, enterprise]
          example: pro
        remainingProRuns:
          type: integer
          example: 45
        remainingPlanRuns:
          type: integer
          example: 10
        proTotalRuns:
          type: integer
          example: 100
          description: Total pro runs available per period for this tier
        planTotalRuns:
          type: integer
          example: 20
          description: Total plan runs available per period for this tier
        lastPeriodResetDate:
          type: string
          format: date-time
          example: 2024-01-01T00:00:00Z

    Run:
      type: object
      properties:
        id:
          type: integer
          example: 12345
        repoId:
          type: integer
          example: 789
        repositoryName:
          type: string
          nullable: true
          description: Repository name in owner/repo format
          example: acme/webapp
        repositoryFullName:
          type: string
          nullable: true
          description: Full repository name
          example: ACME Web Application
        status:
          type: string
          enum: [QUEUED, INITIALIZING, PROCESSING, DONE, FAILED]
          example: PROCESSING
        runType:
          type: string
          enum: [pro, pro-plan]
          example: pro
        title:
          type: string
          example: Implement user authentication
        description:
          type: string
          example: Add JWT-based authentication system with refresh tokens
        plan:
          type: string
          nullable: true
          description: The generated plan for the run (applicable to all run types)
        researchNotes:
          type: string
          nullable: true
          description: Research and analysis notes generated during the run
        prUrl:
          type: string
          nullable: true
        prId:
          type: string
          nullable: true
          description: Pull request ID if one was created
        commandLogUrl:
          type: string
          nullable: true
        errors:
          type: array
          nullable: true
          items:
            type: string
          description: Array of errors encountered during the run
        exitEarly:
          type: boolean
          nullable: true
          description: Whether the run exited early
        exitEarlyReason:
          type: string
          nullable: true
          description: Reason for early exit if applicable
        fileHash:
          type: string
          nullable: true
          description: SHA-256 hash of the issue run task file (for tracking purposes, duplicates allowed)
          example: a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3
        filesModified:
          type: array
          nullable: true
          items:
            type: string
          description: List of files modified during the run
        issueNumber:
          type: integer
          nullable: true
          description: GitHub issue number if associated with an issue
        timeSpentSeconds:
          type: integer
          nullable: true
          description: Time spent executing the run in seconds
        totalDuration:
          type: integer
          nullable: true
          description: Total duration of the run in milliseconds
        totalCost:
          type: number
          nullable: true
          format: float
          description: Total cost of the run in dollars
        totalTokens:
          type: integer
          nullable: true
          description: Total number of tokens used
        totalInputTokens:
          type: integer
          nullable: true
          description: Total number of input tokens used
        totalOutputTokens:
          type: integer
          nullable: true
          description: Total number of output tokens used
        triggerSource:
          type: string
          nullable: true
          enum: [cli, ui, issue, pr, demo_issue, demo_plan, demo_pr]
          description: Source that triggered the run
        url:
          type: string
          nullable: true
          description: URL of the associated GitHub issue or PR if applicable
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Repository:
      type: object
      properties:
        id:
          type: integer
          example: 789
        name:
          type: string
          example: ACME Web Application
        repoName:
          type: string
          example: webapp
        repoOwner:
          type: string
          example: acme
        repoUrl:
          type: string
          example: https://github.com/acme/webapp
        defaultBranch:
          type: string
          example: main
        isEnabled:
          type: boolean
          example: true
        githubInstallationId:
          type: integer
          nullable: true
          example: 12345678
        createdAt:
          type: string
          format: date-time
          example: 2024-01-15T10:30:00Z
        updatedAt:
          type: string
          format: date-time
          example: 2024-01-20T15:45:00Z

    CreateRunRequest:
      type: object
      properties:
        repoId:
          type: integer
          description: Repository ID (either repoId or repositoryName required)
          example: 789
        repositoryName:
          type: string
          description: Repository name (owner/repo or just repo)
          example: acme/webapp
        runType:
          type: string
          enum: [run, plan]
          default: run
          description: Type of run (run for execution, plan for planning)
          example: run
        prompt:
          type: string
          description: The task description or prompt
          example: Implement JWT authentication with refresh tokens. Add login and logout endpoints.
        title:
          type: string
          description: Optional title for the run
          example: Add authentication system
        sourceBranch:
          type: string
          description: |
            Source branch to start from. If not provided, the system will:
            1. Fetch the repository's current default branch from GitHub
            2. Update the repository record with the latest default branch
            3. Use that branch as the source

            If provided, the branch must exist in the repository or the request will be rejected with a BRANCH_NOT_FOUND error.
          example: feature/auth
        targetBranch:
          type: string
          description: |
            Target branch where the PR will merge to. If not provided, defaults to the source branch
            (creating a PR that merges back to the same branch).

            If provided, the branch must exist in the repository or the request will be rejected with a BRANCH_NOT_FOUND error.
            Note: Empty string is treated as undefined and will default to source branch.
          example: main
        fileHash:
          type: string
          description: SHA-256 hash of the task file for tracking purposes (duplicates allowed)
          example: a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3
        force:
          type: boolean
          default: false
          deprecated: true
          description: Deprecated - has no effect on file hash handling. Kept for backwards compatibility.
          example: false
      required:
        - prompt
      example:
        repositoryName: acme/webapp
        runType: run
        prompt: Implement JWT authentication with refresh tokens
        title: Add authentication system
        fileHash: a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3

    BulkRunRequest:
      type: object
      properties:
        repoId:
          type: integer
          description: Repository ID (either repoId or repositoryName required)
          example: 789
        repositoryName:
          type: string
          description: Repository name (owner/repo format)
          example: acme/webapp
        batchTitle:
          type: string
          description: Optional title for the entire batch
          example: Q1 2024 Bug Fixes
        runType:
          type: string
          enum: [run, plan]
          default: run
          description: Type of run for all runs in batch
        sourceBranch:
          type: string
          description: |
            Source branch for all runs to start from. If not provided, the system will:
            1. Fetch the repository's current default branch from GitHub
            2. Update the repository record with the latest default branch
            3. Use that branch as the source for all runs

            If provided, the branch must exist in the repository or all runs will be rejected with a BRANCH_NOT_FOUND error.
          example: main
        targetBranch:
          type: string
          description: |
            Base target branch where PRs will merge to. If not provided, defaults to the source branch
            (creating PRs that merge back to the same branch). Individual runs can override this.

            If provided, the branch must exist in the repository or all runs will be rejected with a BRANCH_NOT_FOUND error.
            Note: Empty string is treated as undefined and will default to source branch.
          example: feature/bulk
        force:
          type: boolean
          default: false
          deprecated: true
          description: Deprecated - has no effect on file hash handling. Kept for backwards compatibility.
        runs:
          type: array
          minItems: 1
          maxItems: 40
          items:
            type: object
            properties:
              prompt:
                type: string
                description: The task description or prompt
                example: Fix authentication bug
              title:
                type: string
                description: Optional title (generated from prompt if not provided)
                example: Fix auth issue
              context:
                type: string
                description: Additional context for this run
                example: Users can't login with Google OAuth
              target:
                type: string
                description: |
                  Target branch for this specific run (overrides bulk targetBranch, defaults to repository's default branch).
                  This branch does not need to exist and can be created during the PR process.
                example: fix/auth-bug-1
              fileHash:
                type: string
                description: SHA-256 hash for tracking purposes (duplicates allowed)
                example: abc123def456
            required:
              - prompt
      required:
        - runs
      example:
        repositoryName: acme/webapp
        batchTitle: Authentication module refactoring
        runs:
          - prompt: Fix authentication bug
            title: Fix auth issue
            fileHash: hash1
          - prompt: Add password reset
            title: Password reset feature
            fileHash: hash2

    BulkRunResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            batchId:
              type: string
              description: Unique batch identifier
              example: batch_20240120_abc123
            batchTitle:
              type: string
              nullable: true
              description: Batch title if provided
              example: Authentication module refactoring
            successful:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                    example: 12345
                  status:
                    type: string
                    example: QUEUED
                  repositoryName:
                    type: string
                    example: acme/webapp
                  title:
                    type: string
                    example: Fix auth issue
                  requestIndex:
                    type: integer
                    description: Position in original request
                    example: 0
            failed:
              type: array
              items:
                type: object
                properties:
                  requestIndex:
                    type: integer
                    example: 1
                  prompt:
                    type: string
                    example: Add password reset
                  error:
                    type: string
                    example: RUN_CREATION_FAILED
                  message:
                    type: string
                    example: Failed to create run due to an error
            metadata:
              type: object
              properties:
                totalRequested:
                  type: integer
                  example: 3
                totalSuccessful:
                  type: integer
                  example: 2
                totalFailed:
                  type: integer
                  example: 1

    BatchStatusResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            batchId:
              type: string
              example: batch_20240120_abc123
            batchTitle:
              type: string
              nullable: true
              example: Authentication module refactoring
            status:
              type: string
              enum: [QUEUED, PROCESSING, COMPLETED, PARTIALLY_FAILED, FAILED]
              description: Aggregate status of all runs
              example: PROCESSING
            runs:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                    example: 12345
                  status:
                    type: string
                    example: DONE
                  title:
                    type: string
                    example: Fix auth issue
                  completedAt:
                    type: string
                    format: date-time
                    description: Completion time for DONE runs
                    example: 2024-01-20T10:30:00Z
                  prUrl:
                    type: string
                    description: Pull request URL if created
                    example: https://github.com/acme/webapp/pull/123
                  progress:
                    type: integer
                    description: Progress percentage for PROCESSING runs
                    example: 45
            metadata:
              type: object
              properties:
                totalRuns:
                  type: integer
                  example: 3
                completed:
                  type: integer
                  example: 1
                processing:
                  type: integer
                  example: 1
                failed:
                  type: integer
                  example: 0
                queued:
                  type: integer
                  example: 1
                startedAt:
                  type: string
                  format: date-time
                  example: 2024-01-20T10:00:00Z
                estimatedCompletionTime:
                  type: string
                  format: date-time
                  nullable: true
                  example: 2024-01-20T10:45:00Z

paths:
  /api/v1/auth/verify:
    get:
      summary: Verify API key
      tags:
        - Authentication
      responses:
        '200':
          description: API key is valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: user_2abc123def456
                      email:
                        type: string
                        example: developer@example.com
                      name:
                        type: string
                        nullable: true
                        description: User's full name (empty string if not provided)
                        example: John Doe
                      githubUsername:
                        type: string
                        example: johndoe
                      tier:
                        type: string
                        enum: [free, pro, enterprise]
                        example: pro
                      remainingProRuns:
                        type: integer
                        example: 45
                      remainingPlanRuns:
                        type: integer
                        example: 10
                      proTotalRuns:
                        type: integer
                        example: 100
                        description: Total pro runs available per period for this tier
                      planTotalRuns:
                        type: integer
                        example: 20
                        description: Total plan runs available per period for this tier
                      lastPeriodResetDate:
                        type: string
                        format: date-time
                        example: 2024-01-01T00:00:00Z
        '401':
          description: Invalid API key
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Authentication failed
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User not found

  /api/v1/user:
    get:
      summary: Get current user info
      tags:
        - User
      responses:
        '200':
          description: User information
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Authentication failed
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User not found

  /api/v1/user/usage:
    get:
      summary: Get usage statistics
      tags:
        - User
      responses:
        '200':
          description: Usage information
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      remainingProRuns:
                        type: integer
                        example: 45
                      remainingPlanRuns:
                        type: integer
                        example: 10
                      proTotalRuns:
                        type: integer
                        example: 100
                        description: Total pro runs available per period for this tier
                      planTotalRuns:
                        type: integer
                        example: 20
                        description: Total plan runs available per period for this tier
                      lastPeriodResetDate:
                        type: string
                        format: date-time
                        example: 2024-01-01T00:00:00Z
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Authentication failed
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User not found

  /api/v1/runs:
    post:
      summary: Create new run
      description: |
        Creates a new AI agent run for the specified repository.
        Supports duplicate detection via file hash.
      tags:
        - Runs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRunRequest'
            examples:
              basic:
                summary: Basic run request (uses repository default branch)
                value:
                  repositoryName: acme/webapp
                  prompt: Fix the login bug in auth.js
                  title: Fix authentication issue
              withBranches:
                summary: Run with specific branches
                value:
                  repositoryName: acme/webapp
                  prompt: Implement new feature
                  title: Add user dashboard
                  sourceBranch: develop
                  targetBranch: main
              withSourceOnly:
                summary: Run with source branch only (PR merges back to same branch)
                value:
                  repositoryName: acme/webapp
                  prompt: Refactor authentication module
                  title: Clean up auth code
                  sourceBranch: feature/auth-refactor
              withHash:
                summary: Run with file hash for tracking
                value:
                  repositoryName: acme/webapp
                  prompt: Implement JWT authentication
                  title: Add auth system
                  fileHash: a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3
      responses:
        '200':
          description: Run created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 12345
                      status:
                        type: string
                        example: QUEUED
                      message:
                        type: string
                        example: Run created successfully
              examples:
                success:
                  value:
                    data:
                      id: 12345
                      status: QUEUED
                      message: Run created successfully
        '400':
          description: Invalid input (including branch not found)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                sourceBranchNotFound:
                  summary: Source branch not found
                  value:
                    error: BRANCH_NOT_FOUND
                    message: "Source branch 'feature/nonexistent' does not exist in acme/webapp"
                targetBranchNotFound:
                  summary: Target branch not found
                  value:
                    error: BRANCH_NOT_FOUND
                    message: "Target branch 'release/v2' does not exist in acme/webapp. Please create it first, or leave target empty to merge back to source branch."
                invalidInput:
                  summary: Missing repository identifier
                  value:
                    error: INVALID_INPUT
                    message: Either repoId or repositoryName is required
        '403':
          description: Forbidden (no runs remaining, repo disabled, or repo lacks GitHub App installation)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Repository not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      summary: List user's runs
      description: |
        Retrieves a paginated list of runs for the authenticated user.
        Supports filtering by repository and sorting options.
      tags:
        - Runs
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number for pagination
          example: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
          description: Number of items per page
          example: 10
        - in: query
          name: repoId
          schema:
            type: integer
          description: Filter by repository ID
          example: 789
        - in: query
          name: status
          schema:
            type: string
          description: Status filtering (not yet implemented)
          deprecated: true
        - in: query
          name: sortBy
          schema:
            type: string
            default: createdAt
            enum: [createdAt, updatedAt, status]
          description: Field to sort by
        - in: query
          name: sortOrder
          schema:
            type: string
            enum: [asc, desc]
            default: desc
          description: Sort order
      responses:
        '200':
          description: List of runs
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Run'
                  metadata:
                    type: object
                    properties:
                      currentPage:
                        type: integer
                        example: 1
                      total:
                        type: integer
                        example: 42
                      totalPages:
                        type: integer
                        example: 5
              examples:
                withRuns:
                  summary: Response with multiple runs
                  value:
                    data:
                      - id: 12345
                        repoId: 789
                        repositoryName: acme/webapp
                        status: DONE
                        runType: pro
                        title: Fix authentication bug
                        description: Fixed the login timeout issue
                        fileHash: a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3
                        createdAt: '2024-01-20T10:00:00Z'
                      - id: 12344
                        repoId: 789
                        repositoryName: acme/webapp
                        status: PROCESSING
                        runType: pro-plan
                        title: Add payment integration
                        description: Planning payment system architecture
                        fileHash: null
                        createdAt: '2024-01-20T09:30:00Z'
                    metadata:
                      currentPage: 1
                      total: 2
                      totalPages: 1

  /api/v1/runs/{id}:
    get:
      summary: Get run details
      tags:
        - Runs
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Run details
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Run'
        '404':
          description: Run not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Cancel run
      tags:
        - Runs
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Run cancelled
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      message:
                        type: string
        '400':
          description: Cannot cancel run in current status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Run not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/runs/{id}/logs:
    get:
      summary: Get run logs
      description: Retrieves the execution logs for a specific run
      tags:
        - Runs
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Run ID
          example: 12345
      responses:
        '200':
          description: Run logs
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      commandLogUrl:
                        type: string
                        nullable: true
                        description: URL to full command execution logs
                        example: https://logs.repobird.ai/runs/12345
                      logs:
                        type: string
                        description: Inline log content
                        example: "[2024-01-20 10:00:00] Starting AI agent...\n[2024-01-20 10:00:05] Analyzing repository..."

  /api/v1/runs/hashes:
    get:
      summary: Get all file hashes for user's runs
      description: |
        Returns all non-empty fileHash values for the authenticated user's runs.
        Used by CLI for tracking and debugging purposes. Note that duplicate file hashes
        are allowed and will not prevent new runs from being created.
      tags:
        - Runs
      responses:
        '200':
          description: List of file hashes
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        issueRunId:
                          type: integer
                          description: The ID of the issue run
                          example: 12345
                        fileHash:
                          type: string
                          description: SHA-256 hash of the issue run task file (duplicates allowed)
                          example: a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3
                      required:
                        - issueRunId
                        - fileHash
                  metadata:
                    type: object
                    properties:
                      total:
                        type: integer
                        description: Total number of hashes returned
                        example: 42
              examples:
                withHashes:
                  summary: Response with multiple file hashes
                  value:
                    data:
                      - issueRunId: 12345
                        fileHash: a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3
                      - issueRunId: 12346
                        fileHash: b123c45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae4
                      - issueRunId: 12347
                        fileHash: c789d45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae5
                    metadata:
                      total: 3
                empty:
                  summary: No hashes found
                  value:
                    data: []
                    metadata:
                      total: 0
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/runs/{id}/diff:
    get:
      summary: Get changes diff
      tags:
        - Runs
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Changes diff
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      diff:
                        type: string
                        nullable: true

  /api/v1/runs/bulk:
    post:
      summary: Create bulk runs
      description: |
        Creates multiple AI agent runs in a single batch for the specified repository.
        Maximum of 40 runs per batch. Supports partial success with 207 Multi-Status.
        Each run can have its own configuration while sharing common settings.
      tags:
        - Runs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkRunRequest'
            examples:
              basic:
                summary: Basic bulk run request
                value:
                  repositoryName: acme/webapp
                  runs:
                    - prompt: Fix the login bug
                    - prompt: Add password reset functionality
                    - prompt: Update user profile page
              withOptions:
                summary: Bulk run with options
                value:
                  repositoryName: acme/webapp
                  batchTitle: Q1 2024 Bug Fixes
                  force: true
                  runs:
                    - prompt: Fix bug # 123
                      title: Critical auth fix
                      fileHash: abc123
                    - prompt: Fix bug # 124
                      context: Users report timeout issues
                      fileHash: def456
      responses:
        '200':
          description: All runs created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkRunResponse'
              examples:
                allSuccess:
                  value:
                    data:
                      batchId: batch_20240120_abc123
                      batchTitle: Authentication module refactoring
                      successful:
                        - id: 12345
                          status: QUEUED
                          repositoryName: acme/webapp
                          title: Fix auth issue
                          requestIndex: 0
                        - id: 12346
                          status: QUEUED
                          repositoryName: acme/webapp
                          title: Password reset feature
                          requestIndex: 1
                      failed: []
                      metadata:
                        totalRequested: 2
                        totalSuccessful: 2
                        totalFailed: 0
        '207':
          description: Partial success (some runs created, some failed)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkRunResponse'
              examples:
                partialSuccess:
                  value:
                    data:
                      batchId: batch_20240120_xyz789
                      batchTitle: null
                      successful:
                        - id: 12345
                          status: QUEUED
                          title: Fix auth issue
                          requestIndex: 0
                      failed:
                        - requestIndex: 1
                          prompt: Add password reset
                          error: RUN_CREATION_FAILED
                          message: Failed to create run due to an error
                      metadata:
                        totalRequested: 2
                        totalSuccessful: 1
                        totalFailed: 1
        '400':
          description: Invalid bulk request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: INVALID_BULK_REQUEST
                  message:
                    type: string
                    example: Bulk request validation failed
                  batchId:
                    type: string
                    nullable: true
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                        error:
                          type: string
        '403':
          description: Forbidden (quota exceeded, repo disabled, repo lacks GitHub App installation, or all runs failed)
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/BulkRunResponse'
                  - type: object
                    properties:
                      error:
                        type: string
                        enum: [QUOTA_EXCEEDED, REPOSITORY_DISABLED, ALL_RUNS_FAILED]
                      message:
                        type: string
                      data:
                        $ref: '#/components/schemas/BulkRunResponse/properties/data'
              examples:
                quotaExceeded:
                  value:
                    error: QUOTA_EXCEEDED
                    message: 'Insufficient run runs remaining. Need 5, have 2'
                    batchId: null
                repositoryDisabled:
                  value:
                    error: REPOSITORY_DISABLED
                    message: Repository acme/webapp is disabled
                    data:
                      batchId: batch_20240120_xyz789
                      batchTitle: null
                      successful: []
                      failed:
                        - requestIndex: 0
                          prompt: Fix auth bug
                          error: REPOSITORY_DISABLED
                          message: Repository acme/webapp is disabled
                      metadata:
                        totalRequested: 1
                        totalSuccessful: 0
                        totalFailed: 1
                allRunsFailed:
                  value:
                    error: ALL_RUNS_FAILED
                    message: All 2 run(s) failed. Check individual errors in the failed array.
                    data:
                      batchId: batch_20240120_def456
                      batchTitle: null
                      successful: []
                      failed:
                        - requestIndex: 0
                          prompt: Fix bug 1
                          error: RUN_CREATION_FAILED
                          message: Failed to create run
                        - requestIndex: 1
                          prompt: Fix bug 2
                          error: RUN_CREATION_FAILED
                          message: Failed to create run
                      metadata:
                        totalRequested: 2
                        totalSuccessful: 0
                        totalFailed: 2

  /api/v1/runs/bulk/{batchId}:
    get:
      summary: Get bulk run status
      description: |
        Retrieves the status and details of all runs in a batch.
        Provides aggregate status and individual run progress.
      tags:
        - Runs
      parameters:
        - in: path
          name: batchId
          required: true
          schema:
            type: string
          description: Batch identifier
          example: batch_20240120_abc123
      responses:
        '200':
          description: Batch status and run details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
              examples:
                processing:
                  value:
                    data:
                      batchId: batch_20240120_abc123
                      batchTitle: Refactoring authentication module
                      status: PROCESSING
                      runs:
                        - id: 12345
                          status: DONE
                          title: Fix auth issue
                          completedAt: '2024-01-20T10:30:00Z'
                          prUrl: https://github.com/acme/webapp/pull/123
                        - id: 12346
                          status: PROCESSING
                          title: Password reset feature
                          progress: 45
                      metadata:
                        totalRuns: 2
                        completed: 1
                        processing: 1
                        failed: 0
                        queued: 0
                        startedAt: '2024-01-20T10:00:00Z'
                        estimatedCompletionTime: '2024-01-20T10:45:00Z'
        '404':
          description: Batch not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Cancel bulk runs
      description: |
        Cancels all QUEUED runs in a batch.
        Only QUEUED runs can be cancelled. PROCESSING/RUNNING runs will continue.
        Returns information about which runs were cancelled, completed, or unable to cancel.
      tags:
        - Runs
      parameters:
        - in: path
          name: batchId
          required: true
          schema:
            type: string
          description: Batch identifier
          example: batch_20240120_abc123
      responses:
        '200':
          description: Cancellation result
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      batchId:
                        type: string
                        example: batch_20240120_abc123
                      cancelled:
                        type: array
                        items:
                          type: integer
                        description: IDs of cancelled runs
                        example: [12346, 12347]
                      completed:
                        type: array
                        items:
                          type: integer
                        description: IDs of already completed runs
                        example: [12345]
                      cannotCancel:
                        type: array
                        items:
                          type: integer
                        description: IDs of runs that cannot be cancelled (processing)
                        example: [12348]
                      message:
                        type: string
                        example: Cancelled 2 of 4 runs (1 already completed, 1 in progress)
              examples:
                partial:
                  value:
                    data:
                      batchId: batch_20240120_abc123
                      cancelled: [12346, 12347]
                      completed: [12345]
                      cannotCancel: [12348]
                      message: Cancelled 2 of 4 runs (1 already completed, 1 in progress)
                allCompleted:
                  value:
                    data:
                      batchId: batch_20240120_abc123
                      cancelled: []
                      completed: [12345, 12346]
                      cannotCancel: []
                      message: All 2 runs were already completed
        '404':
          description: Batch not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/repositories:
    get:
      summary: List user's repositories
      tags:
        - Repositories
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: List of repositories
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Repository'
                  metadata:
                    type: object
                    properties:
                      currentPage:
                        type: integer
                      total:
                        type: integer
                      totalPages:
                        type: integer

  /api/v1/repositories/search:
    get:
      summary: Search repositories by name
      tags:
        - Repositories
      parameters:
        - in: query
          name: q
          required: true
          schema:
            type: string
          description: Search query
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Repository'
        '400':
          description: Search query required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/repositories/{id}:
    get:
      summary: Get repository details
      tags:
        - Repositories
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Repository details
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Repository'
        '404':
          description: Repository not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

tags:
  - name: Authentication
    description: |
      API key verification and authentication endpoints.
      All API requests require a valid Bearer token.
  - name: User
    description: |
      User profile and usage statistics.
      Track remaining runs and subscription tier information.
  - name: Runs
    description: |
      AI agent run management including creation, listing, and monitoring.
      Supports file hash tracking for audit purposes (duplicates are allowed).
      Bulk operations allow creating up to 40 runs in a single request.
  - name: Repositories
    description: |
      Repository management and configuration.
      View and search connected GitHub repositories.
